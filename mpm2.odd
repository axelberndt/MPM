<?xml version="1.0" encoding="UTF-8"?>
<!--<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>-->
<!--<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml"-->
<!--	schematypens="http://purl.oclc.org/dsdl/schematron"<!-\-?>-\->-->
<tei:TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:math="http://www.w3.org/1998/Math/MathML"
  xmlns:mpm="http://www.cemfi.de/mpm/ns/1.0" 
  xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns="http://www.cemfi.de/mpm/ns/1.0">
  <tei:teiHeader>
    <tei:fileDesc>
      <tei:titleStmt>
        <tei:title>Title</tei:title>
      </tei:titleStmt>
      <tei:publicationStmt>
        <tei:p>Publication Information</tei:p>
      </tei:publicationStmt>
      <tei:sourceDesc>
        <tei:p>Information about the source</tei:p>
      </tei:sourceDesc>
    </tei:fileDesc>
  </tei:teiHeader>
  <tei:text>
    <tei:body>
      <tei:schemaSpec ident="mpm" start="mpm" ns="http://www.cemfi.de/mpm/ns/1.0" prefix="mpm." status="draft">

        <!-- borrowed from TEI -->
        <tei:constraintSpec ident="isosch" scheme="isoschematron">
          <tei:desc>Relationship between scheme attribute and contents: ISO Schematron</tei:desc>
          <tei:constraint>
            <sch:ns prefix="sch" uri="http://purl.oclc.org/dsdl/schematron"/>
            <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mpm" uri="http://www.cemfi.de/mpm/ns/1.0"/>
            <sch:report test="tei:constraint/sch:*  and  @scheme ne 'isoschematron'">Rules in the ISO Schematron language must be inside a constraintSpec with a value of 'isoschematron' on the scheme attribute</sch:report>
          </tei:constraint>
        </tei:constraintSpec>
        <tei:constraintSpec ident="needrules" scheme="isoschematron">
          <tei:constraint>
            <sch:ns prefix="sch" uri="http://purl.oclc.org/dsdl/schematron"/>
            <sch:rule context="tei:macroSpec/tei:constraintSpec[@scheme='isoschematron']/tei:constraint">
              <sch:report test="sch:assert|sch:report">An ISO Schematron constraint specification for a macro should not have an 'assert' or 'report' element without a parent 'rule' element</sch:report>
            </sch:rule>
          </tei:constraint>
        </tei:constraintSpec>
        <!-- / borrowed from TEI -->

        <tei:moduleSpec ident="mpm" mode="add" >
          <tei:desc>mpm core module</tei:desc>
        </tei:moduleSpec>
        
        <tei:macroSpec ident="data.URI" module="mpm" type="dt">
          <tei:desc>A Uniform Resource Identifier.</tei:desc>
          <tei:content>
            <rng:data type="anyURI"/>
          </tei:content>
        </tei:macroSpec>
        
        <!--<tei:macroSpec ident="macro.MapLike" mode="add" module="mpm">
          <tei:desc>macro for map content</tei:desc>
          <tei:content>
            <tei:alternate>
              <tei:classRef/><!-\- instruction mit dynamics -\->
              <tei:classRef/><!-\- instruction mit articulation -\->
            </tei:alternate>
          </tei:content>
        </tei:macroSpec>-->
        
        <tei:classSpec ident="att.linking" type="atts" mode="add" module="mpm">
          <tei:desc>Attribute class for attributes containink link and pointer targets.</tei:desc>
          <tei:attList>
            <tei:attDef ident="uri" module="mpm" mode="add">
              <tei:datatype>
                <rng:ref name="data.URI"/>
              </tei:datatype>
            </tei:attDef>
            </tei:attList>
        </tei:classSpec>
        
        <!--<tei:classSpec ident="att.nameable" type="atts" mode="add" module="mpm">
          <tei:desc>Name attribute class.</tei:desc>
          <tei:attList>
            <tei:attRef class="att.name" name="name"/>
          </tei:attList>
        </tei:classSpec>-->
        
        <tei:classSpec ident="att.enumeration" type="atts" mode="add" module="mpm">
          <tei:desc>Enumeration attribute class.</tei:desc>
          <tei:attList>
            <tei:attDef ident="number">
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">1</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.named" type="atts" mode="add" module="mpm">
          <tei:desc>Name attribute class.</tei:desc>
          <tei:attList>
            <tei:attDef ident="name"><!-- ? same attribute required vs optional -->
              <tei:datatype>
                <rng:data type="string"/>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.startStyle" type="atts" mode="add" module="mpm">
          <tei:desc>startStyle attribute class.</tei:desc>
          <tei:attList>
            <tei:attDef ident="startStyle">
              <tei:datatype>
                <rng:data type="string"/>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.typed" type="atts" mode="add" module="mpm">
          <tei:desc>Type attribute class.</tei:desc>
          <tei:attList>
            <tei:attDef ident="type" usage="req">
              <!--<tei:valList type="semi">
                <tei:valItem ident="midi" mode="add">
                  <tei:gloss>reference to a MIDI</tei:gloss>
                </tei:valItem>
                <tei:valItem ident="mei" mode="add">
                  <tei:gloss>reference to a MEI file</tei:gloss>
                </tei:valItem>
                <tei:valItem ident="musicXML" mode="add">
                  <tei:gloss>reference to a musicXML file</tei:gloss>
                </tei:valItem>
              </tei:valList>-->
              <tei:datatype>
                <rng:data type="string"><!-- TODO: mei midi musicXML msm -->
                </rng:data>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.value" type="atts" mode="add" module="mpm">
          <tei:desc>Value attribute class.</tei:desc>
          <tei:attList>
            <tei:attDef ident="value">
              <tei:datatype>
                <rng:data type="float"/>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="model.styleDefPart" type="model" module="mpm" mode="add">
          <tei:desc>The header styleDefPart class groups elements that may appear in styleDef.</tei:desc>
        </tei:classSpec>
        
        <tei:classSpec ident="model.styleDefLike" type="model" module="mpm" mode="add">
          <tei:desc>The header styleDefLike class groups elements that may appear where a styleDef appears.</tei:desc><!-- TODO improve description -->
        </tei:classSpec>
        
        <tei:classSpec ident="model.styleDefContainerLike" type="model" module="mpm" mode="add">
          <tei:desc>The styleDefGrpLike class groups container elements for styleDef elements, such as the articulationStyles element.</tei:desc>
          <!--<tei:classes>
            <tei:memberOf key="model.styleDefLike"/>
          </tei:classes>-->
        </tei:classSpec>
        
        <tei:elementSpec ident="mpm" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="mpm">
          <tei:desc>root element of mpm.</tei:desc>
          <tei:content>
            <rng:zeroOrMore>
              <rng:ref name="referenceMusic"/>
            </rng:zeroOrMore>
            <rng:oneOrMore>
              <rng:ref atLeast="1" name="performance"/>
            </rng:oneOrMore>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="performance" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="mpm">
          <tei:desc>groups information for one performance style.</tei:desc>
          <tei:constraintSpec ident="performance.att.name" scheme="isoschematron">
            <tei:desc><!-- TODO --></tei:desc>
            <tei:constraint>
              <sch:rule context="mpm:performance">
                <sch:assert role="error" test="@name">The performance element must have @name.</sch:assert>
              </sch:rule>
              <sch:report role="error" test="(@name = ./preceding::mpm:performance/@name) or (@name = ./following::mpm:performance/@name)">The performance element must have a unique value of @name. The current elements value "<sch:value-of select="@name"/>" has already been taken by a mpm:performance element <sch:value-of select="if(@name = ./preceding::mpm:performance/@name) then('preceding')else('following')"/> the current element.</sch:report>
            </tei:constraint>
          </tei:constraintSpec>
          <tei:classes>
            <tei:memberOf key="att.named"/>
          </tei:classes>
          <tei:content>
            <rng:ref name="model.performance"/>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="referenceMusic" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="mpm">
          <tei:desc>list of references to files processable with this performance description</tei:desc>
          <tei:content>
            <rng:zeroOrMore>
              <rng:ref name="reference"/>
            </rng:zeroOrMore>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="reference" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="mpm">
          <tei:desc>reference to a music representation processable by this performance description.</tei:desc>
          <tei:constraintSpec ident="reference.att.type" scheme="isoschematron">
            <tei:desc><!-- TODO --></tei:desc>
            <tei:constraint>
              <sch:rule context="mpm:reference">
                <sch:assert role="error" test="@type">The reference element must have @type.</sch:assert>
              </sch:rule>
              <!--<sch:rule context="mpm:reference">
                <sch:assert role="error" test="@type = ('midi', 'msm', 'mei', 'musicXML')">The @type on mpm:reference must have one of the following string values: midi, mei, musicXML.</sch:assert><!-\- TODO make semi-open attribute value list -\->
              </sch:rule>-->
            </tei:constraint>
          </tei:constraintSpec>
          <tei:constraintSpec ident="reference.att.uri" scheme="isoschematron">
            <tei:desc><!-- TODO --></tei:desc>
            <tei:constraint>
              <sch:rule context="mpm:reference">
                <sch:assert role="error" test="@uri">The reference element must have @uri.</sch:assert>
              </sch:rule>
            </tei:constraint>
          </tei:constraintSpec>
          <tei:classes>
            <tei:memberOf key="att.typed"/>
          <tei:memberOf key="att.linking"/>
          </tei:classes>
          <tei:content>
            <rng:empty/><!-- @ implementations -->
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="styleDef" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="mpm">
          <tei:desc>Element used in header sections for defining styles that can be referenced from the corresponding map elements. </tei:desc>
          <tei:classes>
            <tei:memberOf key="model.styleDefLike" min="0" max="unbounded"/>
            <tei:memberOf key="att.named"/>
          </tei:classes>
          <tei:content>
            <tei:classRef key="model.styleDefPart" expand="alternate"/>
          </tei:content>
        </tei:elementSpec>
        
<!-- module performance -->
        
        <tei:moduleSpec ident="performance" mode="add" >
          <tei:desc>performance</tei:desc>
        </tei:moduleSpec>
        
        <tei:macroSpec ident="model.performance" mode="add" module="performance">
          <tei:desc>Content model for performance styles.</tei:desc><!-- TODO create metadata block -->
          <tei:content>
            <rng:interleave>
              <rng:ref name="global"/>
            <rng:zeroOrMore>
                <rng:ref name="part"/>
              </rng:zeroOrMore>
            </rng:interleave>
            </tei:content>
        </tei:macroSpec>
        
        <tei:classSpec ident="att.midi" type="atts" mode="add" module="performance">
          <tei:attList>
            <tei:attDef ident="midi.port">
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            <tei:attDef ident="midi.channel">
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">15</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.partLike" type="atts" mode="add" module="performance">
          <tei:classes>
            <tei:memberOf key="att.enumeration"/>
            <tei:memberOf key="att.midi"/>
            <tei:memberOf key="att.named"/>
          </tei:classes>
        </tei:classSpec>
        
        <tei:classSpec ident="model.dated_maps" type="model" mode="add" module="mpm">
          <tei:desc>class.map groups all map elements.</tei:desc>
        </tei:classSpec>
        
        <tei:classSpec ident="att.instructionLike" type="atts" mode="add" module="performance">
          <tei:desc>Groups elements that may occur in dated maps.</tei:desc>
          <tei:attList>
            <tei:attDef ident="date">
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="model.headerPart" type="model" module="performance" mode="add">
          <tei:desc>The header class groups child elements of the header element.</tei:desc>
        </tei:classSpec>
        
        <tei:elementSpec ident="dated" ns="http://www.cemfi.de/mpm/ns/1.0" module="performance" mode="add">
          <tei:content>
            <rng:zeroOrMore>
              <rng:ref name="model.dated_maps"/>
            </rng:zeroOrMore>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="global" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="performance">
          <tei:content>
            <tei:elementRef key="header"/>
            <tei:elementRef key="dated"/>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="header" ns="http://www.cemfi.de/mpm/ns/1.0" module="performance" mode="add">
          <tei:content>
            <rng:interleave>
              <tei:classRef key="model.headerPart" expand="sequenceOptional"/><!-- invalid but works ;-) -->
<!--              <rng:ref name="model.headerPart"/><!-\- besser model.headerPart -\->-->
            </rng:interleave>
          </tei:content>
          
        </tei:elementSpec>
        
        <tei:elementSpec ident="part" ns="http://www.cemfi.de/mpm/ns/1.0" module="performance" mode="add">
          <tei:desc>Defines a part. Parts with @port and @channel that do not match any MIDI data will be ignored.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.partLike"/>
          </tei:classes>
          <tei:content>
            <!--            <classRef key="att.nameable"/>-->
            <tei:elementRef key="header"/>
            <tei:elementRef key="dated"/>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="switch" ns="http://www.cemfi.de/mpm/ns/1.0" mode="add" module="performance">
          <tei:desc></tei:desc>
          <tei:classes>
            <tei:memberOf key="att.instructionLike"/>
            <tei:memberOf key="model.articulationMapPart" min="0" max="unbounded"/>
            <tei:memberOf key="model.dynamicsMapPart" min="0" max="unbounded"/>
          </tei:classes>
        </tei:elementSpec>

      <!-- module misc -->
        
        <tei:moduleSpec ident="misc" mode="add">
          <tei:desc>miscellaneous</tei:desc>
        </tei:moduleSpec>
        
        <tei:classSpec ident="att.vienna" type="atts" module="misc" mode="add">
          <tei:attList>
            <tei:attDef ident="velXFadeOnOff">
              <tei:desc>Controller number for switching VelocityXFade on or off. On performance processing a global standard-tag will be generated if none exists in order to provide one for each part, with @velXFade=20 and @velXFadeOnOff=20.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            <tei:attDef ident="velXFade">
              <tei:desc>Controller number for VelocityXFade. On performance processing a global standard-tag will be generated if none exists in order to provide one for each part, with @velXFade=20 and @velXFadeOnOff=20.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            <tei:attDef ident="hSpan">
              <tei:desc>Controller number for switching the performance-matrix column (duration), standard value is 21.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            <tei:attDef ident="vSpan">
              <tei:desc>Controller number for switching the performance-matrix row (articulation), standard value is 1 (pitchwheel), because in Vienna Instruments this is the corresponding standard controller.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:elementSpec ident="sequencingCommands" ns="http://www.cemfi.de/mpm/ns/1.0" module="misc" mode="add">
          <tei:desc>Defines a part. Parts with @port and @channel that do not match any MIDI data will be ignored.</tei:desc>
          <tei:classes>
            <tei:memberOf key="model.headerPart" /><!-- min="0" max="1" -->
          </tei:classes>
          <tei:attList>
            <tei:attDef ident="loop">
              <tei:datatype>
                <rng:data type="boolean"/>
              </tei:datatype>
            </tei:attDef>
            <tei:attDef ident="mute">
              <tei:datatype>
                <rng:data type="boolean"/>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:elementSpec>
        
        <tei:elementSpec ident="viennaCtrls" ns="http://www.cemfi.de/mpm/ns/1.0"  module="misc" mode="add">
          <tei:desc>Vienna Instruments allow control of "Velocity-Cross-Fade", that influences velocity, expression, ChannelVolume and tone color accordingly. It can be addressed via specific controllers. To provide the engine with the right controller data this element allows the corresponding encoding. On performance processing a global standard-tag will be generated if none exists in order to provide one for each part, with @velXFade=20 and @velXFadeOnOff=20.</tei:desc>
          <tei:classes>
            <tei:memberOf key="model.headerPart"/><!--  min="0" max="1" -->
            <tei:memberOf key="att.vienna"/>
          </tei:classes>
          <tei:content>
            <rng:empty/>
          </tei:content>
        </tei:elementSpec>

        
<!-- module articulations -->
        <!-- switch hat standardArticulation in articulationMap -->
        
        <tei:moduleSpec ident="articulation" mode="add">
          <tei:desc>articulation</tei:desc>
        </tei:moduleSpec>
        
        <tei:classSpec type="model" ident="model.articulationMapPart">
          <tei:desc>Groups elements that may occur in mpm:articulationMap</tei:desc>
        </tei:classSpec>
        
        <tei:classSpec ident="att.artic" type="atts" module="articulation" mode="add">
          <tei:attList>
            
            <!-- velocity -->
            <tei:attDef ident="absoluteVelocity">
              <tei:desc>Gives an absolute value for velocity that will replace existing velocity values.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
              <!--<tei:constraintSpec ident="asLoudAsPossible" scheme="isoschematron">
                <tei:constraint>
                  <sch:rule context="@absoluteVelocity">
                    <sch:assert role="warning" test="number(.) eq 127">value has to be 127</sch:assert>
                  </sch:rule>
                </tei:constraint>
              </tei:constraintSpec>-->
            </tei:attDef>
            
            <tei:attDef ident="absoluteVelocityChange">
              <tei:desc>Gives an absolute value (+/-) that will be added to the local velocity.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <!-- TODO: isn't there a sound basis for arguing minInclusive / maxInclusive to be  -127 / 127 -->
                  <!--<rng:param name="minInclusive">-127</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>-->
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            
            <tei:attDef ident="relativeVelocity">
              <tei:desc>Gives a relative amount of velocity change as decimal number, e.g. 1=100% (no change), 0.5% (half velocity), 2.0=200% (double velocity).</tei:desc>
              <tei:datatype>
                <rng:data type="decimal">
                  <rng:param name="minInclusive">0.0</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            
            <!-- duration -->
            <tei:attDef ident="absoluteDuration">
              <tei:desc>Gives an absolute value for duration (in MIDI ticks) that will replace existing local duration values.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                  <rng:param name="maxInclusive">127</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            
            <tei:attDef ident="absoluteDurationChange">
              <tei:desc>Gives an absolute value (+/-) in MIDI ticks that will be added to the local duration values.</tei:desc>
              <tei:datatype>
                <rng:data type="int"/>
              </tei:datatype>
            </tei:attDef>
            
            <tei:attDef ident="absoluteDurationMs">
              <tei:desc>Gives an absolute duration in milliseconds that will replace existing local duration values.</tei:desc>
              <tei:datatype>
                <rng:data type="int">
                  <rng:param name="minInclusive">0</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            
            <tei:attDef ident="absoluteDurationChangeMs">
              <tei:desc>Gives an absolute value (+/-) in milliseconds that will be added to existing local duration values.</tei:desc>
              <tei:datatype>
                <rng:data type="int"/>
              </tei:datatype>
            </tei:attDef>
            
            <tei:attDef ident="relativeDuration">
              <tei:desc>Gives a relative amount of duration change as decimal number, e.g. 1=100% (no change), 0.5% (half duration), 2.0=200% (double duration).</tei:desc>
              <tei:datatype>
                <rng:data type="decimal">
                  <rng:param name="minInclusive">0.0</rng:param>
                </rng:data>
              </tei:datatype>
            </tei:attDef>
            
          </tei:attList>
        </tei:classSpec>
        
        <tei:classSpec ident="att.standardArticulation" type="atts" module="articulation" mode="add">
          <tei:attList>
            <tei:attDef ident="standardArticulation">
              <tei:desc></tei:desc>
              <tei:datatype>
                <rng:data type="string"/>
              </tei:datatype>
            </tei:attDef>
          </tei:attList>
        </tei:classSpec>
        
        <tei:elementSpec ident="articulation" ns="http://www.cemfi.de/mpm/ns/1.0"  module="articulation" mode="add">
          <tei:desc>Defines an articulation with a stylewide unique @name and respective duration and velocity modifiers.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.named"/>
            <tei:memberOf key="att.instructionLike"/>
            <tei:memberOf key="model.articulationMapPart" min="0" max="unbounded"/>
          </tei:classes>
          <tei:content/>
        </tei:elementSpec>
        
        <tei:elementSpec ident="articulationDef" ns="http://www.cemfi.de/mpm/ns/1.0"  module="articulation" mode="add">
          <tei:desc>Defines an articulation with a stylewide unique @name nad respective duration and velocity modifiers.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.named"/>
            <tei:memberOf key="att.artic"/>
            <tei:memberOf key="model.styleDefPart" min="0" max="unbounded" exclude="dynamicsDef"/>
          </tei:classes>
          <tei:content/>
        </tei:elementSpec>
        
        <tei:elementSpec ident="articulationStyles" ns="http://www.cemfi.de/mpm/ns/1.0"  module="articulation" mode="add">
          <tei:desc>Enoded in global or local context's header-element. Groups style definitions. Global an local info may complement each other. If definitions with the same name exist in global and local context, the local instructions will override global definitions.</tei:desc>
          <tei:classes>
            <tei:memberOf key="model.headerPart" /><!-- TODO check min="0" max="1" -->
            <tei:memberOf key="model.styleDefContainerLike"/>
          </tei:classes>
          <tei:content><!-- TODO content -->
            <!--<rng:zeroOrMore>
              <rng:ref name="macro.anyName"/>
            </rng:zeroOrMore>-->
            <tei:classRef key="model.styleDefLike" expand="sequenceOptionalRepeatable"/>
          </tei:content>
        </tei:elementSpec>
        
        <tei:elementSpec ident="articulationMap" ns="http://www.cemfi.de/mpm/ns/1.0"  module="articulation" mode="add">
          <tei:desc>Enoded in global or local context's header-element. Groups style definitions. Global an local info may complement each other. If definitions with the same name exist in global and local context, the local instructions will override global definitions.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.standardArticulation"/>
            <tei:memberOf key="att.startStyle"/>
            <tei:memberOf key="model.dated_maps" min="0" max="1"/>
          </tei:classes>
          <tei:content>
            <rng:interleave>
              <tei:classRef key="model.articulationMapPart" expand="sequenceOptional"/><!--TODO check @expand invalid but works-->
            </rng:interleave>
          </tei:content>
        </tei:elementSpec>
        
        <!-- module dynamics -->
        
        <tei:moduleSpec ident="dynamics" mode="add">
          <tei:desc>dynamics</tei:desc>
        </tei:moduleSpec>
        
        <tei:classSpec type="model" ident="model.dynamicsMapPart">
          <tei:desc>Groups elements that may occur in mpm:dynamicsMap</tei:desc>
        </tei:classSpec>
        
        <tei:elementSpec ident="dynamics" ns="http://www.cemfi.de/mpm/ns/1.0"  module="dynamics" mode="add">
          <tei:desc>Defines an articulation with a stylewide unique @name and respective duration and velocity modifiers.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.named"/>
            <tei:memberOf key="att.instructionLike"/>
            <tei:memberOf key="model.dynamicsMapPart" min="0" max="unbounded"/>
          </tei:classes>
          <tei:content/>
        </tei:elementSpec>
        
        <tei:elementSpec ident="dynamicsDef" ns="http://www.cemfi.de/mpm/ns/1.0"  module="dynamics" mode="add">
          <tei:desc>Defines `dynamincs with a stylewide unique @name nad respective velocity values.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.artic"/>
            <tei:memberOf key="att.named"/>
            <tei:memberOf key="att.value"/>
            <tei:memberOf key="model.styleDefPart" min="0" max="unbounded"/>
          </tei:classes>
          <tei:content/>
        </tei:elementSpec>
        
        <tei:elementSpec ident="dynamicsStyles" ns="http://www.cemfi.de/mpm/ns/1.0"  module="dynamics" mode="add">
          <tei:desc>Enoded in global or local context's header-element. Groups style definitions. Global an local info may complement each other. If definitions with the same name exist in global and local context, the local instructions will override global definitions.</tei:desc>
          <tei:classes>
            <tei:memberOf key="model.headerPart" /><!-- TODO check min="0" max="1" -->
            <tei:memberOf key="model.styleDefContainerLike"/>
          </tei:classes>
          <tei:content><!-- TODO content -->
            <!--<rng:zeroOrMore>
              <rng:ref name="macro.anyName"/>
            </rng:zeroOrMore>-->
            <tei:classRef key="model.styleDefLike" expand="sequenceOptionalRepeatable"/>
          </tei:content>
        </tei:elementSpec>
        
        
        <tei:elementSpec ident="dynamicsMap" ns="http://www.cemfi.de/mpm/ns/1.0" module="dynamics" mode="add">
          <tei:desc>Allowed in global or local context as child of dated-element. Contains dated dynamics instructions. Preprocessing has to make sure a global dynamicsmap exists for every style, and pass them to lokal contexts (part-element) if no dynamicsmap is present there. So to say, the global dynamicsmap has to be propagated to local contexts if not overridden there.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.startStyle"/>
            <tei:memberOf key="model.dated_maps"/>
          </tei:classes>
          <tei:content>
            <rng:interleave>
              <tei:classRef key="model.dynamicsMapPart" expand="sequenceOptional"/><!--TODO check @expand invalid but works-->
            </rng:interleave>
          </tei:content>
        </tei:elementSpec>
        
        <!-- module ornamentation -->
        
        <tei:moduleSpec ident="ornamentation" mode="add">
          <tei:desc>ornamentation</tei:desc>
        </tei:moduleSpec>
        
        <tei:elementSpec ident="ornamentationDef" ns="http://www.cemfi.de/mpm/ns/1.0"  module="ornamentation" mode="add">
          <tei:desc><!-- TODO -->.</tei:desc>
          <tei:classes>
            <tei:memberOf key="att.named"/>
            <tei:memberOf key="att.artic"/>
            <tei:memberOf key="model.styleDefPart" min="0" max="unbounded"/>
          </tei:classes>
          <tei:content/>
        </tei:elementSpec>
        
        <tei:elementSpec ident="ornamentationStyles" ns="http://www.cemfi.de/mpm/ns/1.0"  module="articulation" mode="add">
          <tei:desc>Enoded in global or local context's header-element. Groups style definitions. Global an local info may complement each other. If definitions with the same name exist in global and local context, the local instructions will override global definitions.</tei:desc>
          <tei:classes>
            <tei:memberOf key="model.headerPart" /><!-- TODO check min="0" max="1" -->
            <tei:memberOf key="model.styleDefContainerLike"/>
          </tei:classes>
          <tei:content><!-- TODO content -->
            <!--<rng:zeroOrMore>
              <rng:ref name="macro.anyName"/>
            </rng:zeroOrMore>-->
            <tei:classRef key="model.styleDefLike" expand="sequenceOptionalRepeatable"/>
          </tei:content>
        </tei:elementSpec>
        
        
        <tei:elementSpec ident="ornamentationMap" ns="http://www.cemfi.de/mpm/ns/1.0" module="ornamentation" mode="add">
          <tei:desc><!-- TODO --></tei:desc>
          <tei:classes>
            <tei:memberOf key="model.dated_maps"/>
          </tei:classes>
          <tei:content>
            <!--<rng:zeroOrMore>
              <rng:attribute>
                <rng:anyName/>
              </rng:attribute>
            </rng:zeroOrMore>-->
            <rng:zeroOrMore>
              <rng:ref name="element"/>
            </rng:zeroOrMore>
          </tei:content>
        </tei:elementSpec>

      </tei:schemaSpec>
    </tei:body>
  </tei:text>
</tei:TEI>
