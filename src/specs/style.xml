<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<tei:elementSpec ident="style" module="mpm.core" mode="add" ns="http://www.cemfi.de/mpm/ns/1.0" 
    xmlns:tei="http://www.tei-c.org/ns/1.0"
    xmlns:schematron="http://purl.oclc.org/dsdl/schematron">
    <tei:gloss>style switch</tei:gloss>
    
    <tei:desc>This element is used to switch between styles which are defined in the global or local <tei:gi>header</tei:gi> environment via <tei:gi>styleDef</tei:gi> elements.</tei:desc>
    
    <tei:classes>
        <tei:memberOf key="att.time.symbolic.date"/>
        <tei:memberOf key="att.id"/>
        <tei:memberOf key="att.reference.name"/>
    </tei:classes>
    
    <tei:content>
        <tei:empty/>
    </tei:content>
    
    <tei:constraintSpec ident="style_exists" scheme="schematron">
        <tei:gloss>style exists constraint</tei:gloss>
        <tei:desc>Within its @name.ref the style element can refer only to styleDef elements in the same domain. These must actually exist.</tei:desc>
        <tei:constraint>
            <schematron:rule context="mpm:style">
                <schematron:let name="nameRef" value="string(attribute::name.ref)"/>
                <schematron:let name="domain" value="concat(substring-before(local-name(parent::*), 'Map'), 'Styles')"/>
                <schematron:let name="header" value="(ancestor::mpm:part, ancestor::mpm:performance/child::mpm:global)/child::mpm:header"/>
                <schematron:assert test="$header/child::*[local-name() = $domain]/child::mpm:styleDef[string(attribute::name) = $nameRef]">
                    Invalid style reference: There exists no <schematron:value-of select="$domain"/>/styleDef with @name="<schematron:value-of select="$nameRef"/>". 
                </schematron:assert>
            </schematron:rule>
        </tei:constraint>
    </tei:constraintSpec>
    
    <tei:attList>
        <tei:attDef ident="defaultArticulation" usage="opt">
            <tei:gloss>articulationname reference</tei:gloss>
            
            <tei:desc>This attribute should be used to refer to an <tei:gi>articulationDef</tei:gi>.</tei:desc>
            
            <tei:datatype>
                <tei:dataRef name="string"/>
            </tei:datatype>
            
            <tei:constraintSpec ident="defaultArticulation_only_in_articulationMaps" scheme="schematron">
                <tei:gloss>default articulation constraints</tei:gloss>
                <tei:desc>Attribute defaultArticulation can be used only within an articulationMap. Its reference articulationDef must exist.</tei:desc>
                <tei:constraint>
                    <schematron:assert test="parent::*/parent::mpm:articulationMap">
                        Element <schematron:value-of select="local-name(parent::*)"/> can hold @<schematron:value-of select="local-name()"/> only within an articulationMap.
                    </schematron:assert>
                    
                    <schematron:rule context="attribute::defaultArticulation">
                        <schematron:let name="this" value="string()"/>
                        <schematron:let name="styleRef" value="string(parent::*/attribute::name.ref)"/>
                        <schematron:let name="header" value="(ancestor::mpm:part, ancestor::mpm:performance/child::mpm:global)/child::mpm:header"/>
                        <schematron:let name="style" value="$header/child::mpm:articulationStyles/child::mpm:styleDef[string(attribute::name) = $styleRef]"/>
                        <schematron:assert test="$style/child::mpm:articulationDef[string(attribute::name) = $this]">
                            Invalid @<schematron:value-of select="local-name()"/>: Cannot find an articulationDef in the local and global scope that matches @name="<schematron:value-of select="$this"/>". 
                        </schematron:assert>
                    </schematron:rule>
                </tei:constraint>
            </tei:constraintSpec>
            
            <tei:remarks>
                <tei:p>This attribute is optional and meaningful only within an <tei:gi>articulationMap</tei:gi>.</tei:p>
            </tei:remarks>
        </tei:attDef>
    </tei:attList>
    
    <tei:exemplum>
        <tei:p>Switching the style reference in maps is generally done by placing the <tei:gi>style</tei:gi> element within the map.</tei:p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <style date="654.0" name.ref="Karajan"/>
        </egXML>
    </tei:exemplum>
    <tei:exemplum>
        <tei:p>Switching the style reference in an <tei:gi>articulationMap</tei:gi> is a special case. Here an optional further attribute is available, <tei:att>defaultArticulation</tei:att>.</tei:p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <style date="654.0" name.ref="Karajan" defaultArticulation="nonlegato"/>
        </egXML>
        <tei:p>The default articulation refers to the <tei:gi>articulationDef</tei:gi> that should be applied to every note that is not articulated otherwise.</tei:p>
    </tei:exemplum>
    
    <tei:remarks>
        <tei:p>If the performance instructions in a map rely on a style definition, the style switch must be placed in the map before the first such instruction, typically right at the beginning at date 0.0. </tei:p>
    </tei:remarks>
</tei:elementSpec>
