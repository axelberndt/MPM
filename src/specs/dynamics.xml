<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<tei:elementSpec ident="dynamics" module="mpm.core" mode="add" ns="http://www.cemfi.de/mpm/ns/1.0" 
    xmlns:tei="http://www.tei-c.org/ns/1.0"
    xmlns:schematron="http://purl.oclc.org/dsdl/schematron">
    <tei:gloss>dynamics</tei:gloss>
    
    <tei:desc>A dynamics instruction</tei:desc>
    
    <tei:classes>
        <tei:memberOf key="att.time.symbolic.date"/>
        <tei:memberOf key="att.transition.to"/>
        <tei:memberOf key="att.id"/>
    </tei:classes>
    
    <tei:content>
        <tei:empty/>
    </tei:content>
    
    <tei:attList>
        <tei:attDef ident="volume" usage="req">
            <tei:gloss>volume</tei:gloss>
            <tei:desc>The initial volume of this instruction.</tei:desc>
            <tei:datatype>
                <tei:dataRef name="string"/>
            </tei:datatype>
            <tei:constraintSpec ident="volume_reference_exists" scheme="schematron">
                <tei:gloss>volume reference exists constraint</tei:gloss>
                <tei:desc>With its <tei:att>volume</tei:att> the <tei:gi>dynamics</tei:gi> element can refer only to existing <tei:gi>dynamicsDef</tei:gi> elements.</tei:desc>
                <tei:constraint>
                    <schematron:pattern>
                        <!-- if the value is numeric, all is fine -->
                        <schematron:rule context="attribute::volume[number(.) = number(.)]">
                            <schematron:assert test="true()"/>
                        </schematron:rule>
                        
                        <!-- this rule captures all literal @volume but with no preceding style element -->
                        <schematron:rule context="attribute::volume[not(parent::*/preceding-sibling::mpm:style)]">
                            <schematron:report test="true()">
                                No preceding style element in the <schematron:value-of select="local-name(parent::*/parent::*)"/>. This is required to resolve the reference given by @<schematron:value-of select="local-name()"/>="<schematron:value-of select="string()"/>".
                            </schematron:report>
                        </schematron:rule>

                        <!-- all remaining literal @volume that did not fall under the previous rules -->
                        <schematron:rule context="attribute::volume">
                            <schematron:let name="nameRef" value="string()"/>
                            <schematron:let name="styleName" value="string(parent::*/preceding-sibling::mpm:style[1]/attribute::name.ref)"/>  <!-- read the style reference from the last style element in the map before this element (preceding siblings are in reverse order, last() would return the first node in the set) -->
                            <schematron:let name="header" value="(ancestor::mpm:part, ancestor::mpm:performance/child::mpm:global)/child::mpm:header"/>
                            <schematron:let name="style" value="$header/child::mpm:dynamicsStyles/child::mpm:styleDef[string(attribute::name) = $styleName]"/>
                            <schematron:assert test="$style/child::mpm:dynamicsDef[string(attribute::name) = $nameRef]">
                                Invalid @<schematron:value-of select="local-name()"/> value: Cannot find a local or global dynamics style "<schematron:value-of select="$styleName"/>" with a dynamicsDef that matches @name="<schematron:value-of select="$nameRef"/>".
                            </schematron:assert>
                        </schematron:rule>
                    </schematron:pattern>
                </tei:constraint>
            </tei:constraintSpec>
            <tei:remarks>
                <tei:p>The value can be purely numeric. Alternatively, the value can also be literal and, thus, refer to a <tei:gi>dynamicsDef</tei:gi> in the underlying dynamics style definition.</tei:p>
            </tei:remarks>
        </tei:attDef>
        
        <tei:attDef ident="curvature" usage="opt">
            <tei:gloss>sigmoidal curvature of the dynamics transition</tei:gloss>
            <tei:desc>If attribute <tei:att>transition.to</tei:att> is specified and, thus, the element describes a continuous dynamics transition (cresc., decresc.) the shape of the transition can be further refined by this attribute. Its value in the interval [0.0; 1.0] indicates a distinct sigmoidal (S) shape of the dynamics curve (value &gt; 0.0) or a straight linear transition (value = 0.0).</tei:desc>
            <tei:datatype>
                <tei:dataRef name="double">
                    <tei:dataFacet name="minInclusive" value="0.0"/>
                    <tei:dataFacet name="maxInclusive" value="1.0"/>
                </tei:dataRef>
            </tei:datatype>
            <tei:defaultVal>0.0</tei:defaultVal>
        </tei:attDef>

        <tei:attDef ident="protraction" usage="opt">
            <tei:gloss>asymmetry of the dynamics transition</tei:gloss>
            <tei:desc>If attribute <tei:att>transition.to</tei:att> is specified and, thus, the element describes a continuous dynamics transition (cresc., decresc.) the shape of the transition can be further refined by this attribute. Its value in the interval [-1.0; 1.0] indicates whether the transition comes relatively early (value &lt; 0.0), relatively late (value &gt; 0.0) or is equally shared between first and second half of the interval between <tei:gi>date</tei:gi> and the subsequent dynamics instruction's<tei:gi>date</tei:gi>.</tei:desc>
            <tei:datatype>
                <tei:dataRef name="double">
                    <tei:dataFacet name="minInclusive" value="-1.0"/>
                    <tei:dataFacet name="maxInclusive" value="1.0"/>
                </tei:dataRef>
            </tei:datatype>
            <tei:defaultVal>0.0</tei:defaultVal>
        </tei:attDef>

        <tei:attDef ident="subNoteDynamics" usage="opt">
            <tei:gloss>sub-note dynamics flag</tei:gloss>
            <tei:desc>If attribute <tei:att>transition.to</tei:att> is specified and, thus, the element describes a continuous dynamics transition (cresc., decresc.) this attribute can be used to indicate whether the dynamics are performed note-wise (false) or on the sub-note level (true).</tei:desc>
            <tei:datatype>
                <tei:dataRef name="boolean"/>
            </tei:datatype>
            <tei:defaultVal>false</tei:defaultVal>
            <tei:remarks>
                <tei:p>If the value is false (default), dynamics applies only to note onsets, the remainder of the note keeps that volume. If true, the volume of the held tone modulates. Be aware that metrical accentuation and articulation add on top of dynamics, this means that a continuous crescendo or decrescendo (even with sub-note dynamics) are not necessarily smooth as far as they incorporate fluctuations originating from these domains.</tei:p>
            </tei:remarks>
        </tei:attDef>
    </tei:attList>
    
    <tei:exemplum>
        <tei:p>A constant dynamics instruction with a numeric volume value, a constant dynamics instruction with a literal volume value (requires an according <tei:gi>dynamicsDef</tei:gi>), a decrescendo instruction, and a crescendo instruction. The fifth instruction is a "decrescendo al niente" with a perfectly linear shape.</tei:p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <dynamics date="0.0" volume="96.0"/>
            <dynamics date="720.0" volume="forte"/>
            <dynamics date="6500.0" volume="mf" transition.to="pp" curvature="0.7" protraction="-0.4"/>
            <dynamics date="90500.0" volume="pp" transition.to="127.0" curvature="0.5" protraction="0.6" subNoteDynamics="true"/>
            <dynamics date="120700.0" volume="100.0" transition.to="0.0" curvature="0.0" protraction="0.0" subNoteDynamics="true"/>
        </egXML>
    </tei:exemplum>
    
    <tei:remarks>
        <tei:p>The dynamics instruction starts at the specified <tei:att>date</tei:att> and ends at the <tei:att>date</tei:att> of the subsequent dynamics instruction. Within this time interval the dynamics is either constant, monotonically increasing or monotonically decreasing. Non-monotonic shapes (e.g. cresc. followed by decresc.) are composed of a sequence of multiple <tei:gi>dynamics</tei:gi> elements.</tei:p>
    </tei:remarks>
    
    <tei:remarks>
        <tei:p>When using literal volume values (in attributes <tei:att>volume</tei:att> and <tei:att>transition.to</tei:att>) make sure that the according dynamics style is associated. This is done by placing a <tei:gi>style</tei:gi> element in the dynamics map before the first use of literal volume values.</tei:p>        
    </tei:remarks>
</tei:elementSpec>
